# PowerShell script ƒë·ªÉ build Windows executable
Write-Host "üöÄ Building Tool Viber for Windows..." -ForegroundColor Green

# Ki·ªÉm tra admin rights
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ö†Ô∏è  C·∫¢NH B√ÅO: Kh√¥ng ch·∫°y v·ªõi quy·ªÅn Administrator!" -ForegroundColor Red
    Write-Host "   C√≥ th·ªÉ g·∫∑p l·ªói code signing. Khuy·∫øn ngh·ªã:" -ForegroundColor Yellow
    Write-Host "   1. ƒê√≥ng PowerShell n√†y" -ForegroundColor White
    Write-Host "   2. Right-click PowerShell ‚Üí Run as Administrator" -ForegroundColor White
    Write-Host "   3. Ch·∫°y l·∫°i script n√†y" -ForegroundColor White
    
    $choice = Read-Host "`nB·∫°n c√≥ mu·ªën ti·∫øp t·ª•c kh√¥ng? (y/N)"
    if ($choice -ne "y" -and $choice -ne "Y") {
        Write-Host "ƒê√£ h·ªßy. H√£y ch·∫°y l·∫°i v·ªõi quy·ªÅn Administrator." -ForegroundColor Red
        exit 1
    }
}

# Ki·ªÉm tra Node.js
Write-Host "Checking Node.js installation..." -ForegroundColor Yellow
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Found Node.js: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js not found. Please install Node.js 18+ from nodejs.org" -ForegroundColor Red
    exit 1
}

# Ki·ªÉm tra Python
Write-Host "Checking Python installation..." -ForegroundColor Yellow
try {
    $pythonVersion = python --version
    Write-Host "‚úÖ Found Python: $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python not found. Please install Python 3.9+ from python.org" -ForegroundColor Red
    exit 1
}

# S·ª≠a l·ªói electron-store
Write-Host "Fixing electron-store error..." -ForegroundColor Yellow
if (Test-Path "node_modules") {
    Remove-Item -Recurse -Force "node_modules"
    Write-Host "‚úÖ Removed old node_modules" -ForegroundColor Green
}
if (Test-Path "package-lock.json") {
    Remove-Item "package-lock.json"
    Write-Host "‚úÖ Removed package-lock.json" -ForegroundColor Green
}

# C√†i ƒë·∫∑t Node dependencies
Write-Host "Installing Node.js packages..." -ForegroundColor Yellow
npm install
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå npm install failed" -ForegroundColor Red
    exit 1
}

# C√†i ƒë·∫∑t Python requirements
Write-Host "Installing Python packages..." -ForegroundColor Yellow
pip install pyinstaller pyautogui pyperclip pillow
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå pip install failed" -ForegroundColor Red
    exit 1
}

# Build executable
Write-Host "Building Python executable..." -ForegroundColor Yellow
Set-Location "src/automation"
pyinstaller viber_sender_win.spec
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå PyInstaller failed" -ForegroundColor Red
    exit 1
}

# Copy executable
Write-Host "Copying executable..." -ForegroundColor Yellow
Set-Location "../.."
if (-not (Test-Path "resources")) {
    New-Item -ItemType Directory -Path "resources"
}
Copy-Item "src/automation/dist/viber_sender.exe" "resources/viber_sender.exe"
Write-Host "‚úÖ Executable copied to resources/" -ForegroundColor Green

# Build Electron app
Write-Host "Building Electron app..." -ForegroundColor Yellow
npm run dist
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Electron build failed" -ForegroundColor Red
    exit 1
}

Write-Host "`nüéâ Build completed successfully!" -ForegroundColor Green
Write-Host "üìÅ Files created:" -ForegroundColor Cyan
if (Test-Path "dist/Tool Viber Setup 1.0.0.exe") {
    $size1 = [math]::Round((Get-Item "dist/Tool Viber Setup 1.0.0.exe").Length / 1MB, 1)
    Write-Host "   ‚úÖ Tool Viber Setup 1.0.0.exe ($size1 MB)" -ForegroundColor White
}
if (Test-Path "dist/Tool Viber-1.0.0-win32-x64-portable.zip") {
    $size2 = [math]::Round((Get-Item "dist/Tool Viber-1.0.0-win32-x64-portable.zip").Length / 1MB, 1)
    Write-Host "   ‚úÖ Tool Viber-1.0.0-win32-x64-portable.zip ($size2 MB)" -ForegroundColor White
}

Write-Host "`n‚ö° App ch·∫°y ho√†n to√†n ƒë·ªôc l·∫≠p, kh√¥ng c·∫ßn c√†i Python!" -ForegroundColor Green
Write-Host "üöÄ B·∫°n c√≥ th·ªÉ chia s·∫ª file .exe/.zip cho b·∫•t k·ª≥ ai!" -ForegroundColor Green

Write-Host "`nPress any key to exit..." -ForegroundColor Gray
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown") 