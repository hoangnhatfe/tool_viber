# Script troubleshooting cho Windows
Write-Host "üîç Tool Viber Windows Troubleshooting" -ForegroundColor Cyan

Write-Host "`n=== KI·ªÇM TRA H·ªÜ TH·ªêNG ===" -ForegroundColor Yellow

# Ki·ªÉm tra Windows version
$osVersion = [System.Environment]::OSVersion.VersionString
Write-Host "Windows Version: $osVersion" -ForegroundColor White

# Ki·ªÉm tra Node.js
Write-Host "`nüì¶ Node.js:" -ForegroundColor Green
try {
    $nodeVersion = node --version
    $npmVersion = npm --version
    Write-Host "  ‚úÖ Node.js: $nodeVersion" -ForegroundColor White
    Write-Host "  ‚úÖ npm: v$npmVersion" -ForegroundColor White
} catch {
    Write-Host "  ‚ùå Node.js not found" -ForegroundColor Red
    Write-Host "  üí° Download from: https://nodejs.org" -ForegroundColor Yellow
}

# Ki·ªÉm tra Python
Write-Host "`nüêç Python:" -ForegroundColor Green
try {
    $pythonVersion = python --version
    $pipVersion = pip --version
    Write-Host "  ‚úÖ Python: $pythonVersion" -ForegroundColor White
    Write-Host "  ‚úÖ pip: $pipVersion" -ForegroundColor White
} catch {
    Write-Host "  ‚ùå Python not found" -ForegroundColor Red
    Write-Host "  üí° Download from: https://python.org" -ForegroundColor Yellow
}

# Ki·ªÉm tra Git
Write-Host "`nüìã Git:" -ForegroundColor Green
try {
    $gitVersion = git --version
    Write-Host "  ‚úÖ $gitVersion" -ForegroundColor White
} catch {
    Write-Host "  ‚ùå Git not found" -ForegroundColor Red
    Write-Host "  üí° Download from: https://git-scm.com" -ForegroundColor Yellow
}

# Ki·ªÉm tra PyInstaller
Write-Host "`nüîß PyInstaller:" -ForegroundColor Green
try {
    $pyinstallerVersion = pyinstaller --version
    Write-Host "  ‚úÖ PyInstaller: $pyinstallerVersion" -ForegroundColor White
} catch {
    Write-Host "  ‚ùå PyInstaller not found" -ForegroundColor Red
    Write-Host "  üí° Install: pip install pyinstaller" -ForegroundColor Yellow
}

# Ki·ªÉm tra th∆∞ m·ª•c d·ª± √°n
Write-Host "`n=== KI·ªÇM TRA D·ª∞ √ÅN ===" -ForegroundColor Yellow

$currentDir = Get-Location
Write-Host "Current Directory: $currentDir" -ForegroundColor White

# Ki·ªÉm tra file quan tr·ªçng
$importantFiles = @(
    "package.json",
    "src/main.js", 
    "src/automation/viber_sender.py",
    "src/automation/viber_sender_win.spec"
)

foreach ($file in $importantFiles) {
    if (Test-Path $file) {
        Write-Host "  ‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå $file (missing)" -ForegroundColor Red
    }
}

# Ki·ªÉm tra node_modules
if (Test-Path "node_modules") {
    $nodeModulesSize = [math]::Round((Get-ChildItem "node_modules" -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB, 1)
    Write-Host "  ‚úÖ node_modules ($nodeModulesSize MB)" -ForegroundColor Green
} else {
    Write-Host "  ‚ùå node_modules (missing - run 'npm install')" -ForegroundColor Red
}

# Ki·ªÉm tra resources
if (Test-Path "resources") {
    Write-Host "  ‚úÖ resources folder" -ForegroundColor Green
    if (Test-Path "resources/viber_sender.exe") {
        $exeSize = [math]::Round((Get-Item "resources/viber_sender.exe").Length / 1MB, 1)
        Write-Host "    ‚úÖ viber_sender.exe ($exeSize MB)" -ForegroundColor Green
    } else {
        Write-Host "    ‚ùå viber_sender.exe (missing)" -ForegroundColor Red
    }
} else {
    Write-Host "  ‚ùå resources folder (missing)" -ForegroundColor Red
}

Write-Host "`n=== GI·∫¢I PH√ÅP ===" -ForegroundColor Yellow

Write-Host "üîß N·∫øu g·∫∑p l·ªói 'Cannot find module conf':" -ForegroundColor Cyan
Write-Host "   1. Ch·∫°y: fix_windows.bat" -ForegroundColor White
Write-Host "   2. Ho·∫∑c: rmdir /s /q node_modules && del package-lock.json && npm install" -ForegroundColor White

Write-Host "`nüöÄ ƒê·ªÉ build app:" -ForegroundColor Cyan
Write-Host "   1. Ch·∫°y: build_windows.ps1" -ForegroundColor White
Write-Host "   2. Ho·∫∑c follow h∆∞·ªõng d·∫´n trong SETUP_WINDOWS.md" -ForegroundColor White

Write-Host "`n‚ö° C·∫ßn h·ªó tr·ª£ th√™m?" -ForegroundColor Cyan
Write-Host "   - Check SETUP_WINDOWS.md" -ForegroundColor White
Write-Host "   - Check BUILD_WINDOWS.md" -ForegroundColor White

Write-Host "`nPress any key to exit..." -ForegroundColor Gray
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown") 